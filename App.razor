@using SudokuSolver.Web.Models
@using SudokuSolver.Web.Services
@inject ISudokuGridFactory SudokuGridFactory

<div class="button-container">
    <div class="button" @onclick="SetEasyDifficulty">Easy</div>
    <div class="button" @onclick="SetMediumDifficulty">Medium</div>
    <div class="button" @onclick="SetHardDifficulty">Hard</div>
</div>

@if (gridContext is not null)
{
    <div class="container">
        <div class="sudoku-grid">
            @foreach (var cell in gridContext.Cells)
            {
                @if (@cell != 0)
                {
                    <div class="sudoku-grid-cell">@cell</div>
                }
                else
                {
                    <div class="sudoku-grid-cell"> </div>
                }
            }
        </div>
    </div>
}


@code {
    int Difficulty;
    private GridContext? gridContext;
    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    void SetEasyDifficulty()
    {
        gridContext = SudokuGridFactory.CreateEasyGrid();

    }
    void SetMediumDifficulty()
    {
        gridContext = SudokuGridFactory.CreateMediumGrid();

    }
    void SetHardDifficulty()
    {
        gridContext = SudokuGridFactory.CreateHardGrid();

    }

 
}
